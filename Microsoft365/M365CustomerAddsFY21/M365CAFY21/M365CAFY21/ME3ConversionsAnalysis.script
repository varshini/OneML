//Script GUID:46d8e54c-a5a0-4922-a05c-ab2efb7052c2
//Used for tracking history

//Script GUID:cd23e082-977a-42a3-b063-65ce736d1e30
//Used for tracking history

#DECLARE snapDate DateTime = DateTime.Parse(@@PROCESS_DATE_START@@);

//Output
#DECLARE allUpMauWkloadOut      string = string.Format("/local/Projects/M365NCA/EMSUsage/{0:yyyy-MM}_MauByWorkload.ss", @snapDate);

#DECLARE oatp_path string   = string.Format("/shares/IDEAs.Prod/Partner/PreRelease/dev/tenantactiveusagecounts/user/rl28/oatpv2/{0:yyyy}/{0:MM}/ActiveUserCount_{0:yyyy}_{0:MM}_{0:dd}.ss", @snapDate);
oatp_data = SELECT Date, OmsTenantId, Application, Convert.ToInt64(AllUp) AS Mau FROM (SSTREAM @oatp_path);

#DECLARE mip_path string   = string.Format("/shares/IDEAs.Prod/Partner/PreRelease/dev/tenantactiveusagecounts/user/rl28/mip/{0:yyyy}/{0:MM}/ActiveUserCount_{0:yyyy}_{0:MM}_{0:dd}.ss", @snapDate);
mip_data = SELECT Date, OmsTenantId, Application, Convert.ToInt64(AllUp) AS Mau FROM (SSTREAM @mip_path);

#DECLARE mig_path string   = string.Format("/shares/IDEAs.Prod/Partner/PreRelease/dev/tenantactiveusagecounts/user/rl28/mig/{0:yyyy}/{0:MM}/ActiveUserCount_{0:yyyy}_{0:MM}_{0:dd}.ss", @snapDate);
mig_data = SELECT Date, OmsTenantId, Application, Convert.ToInt64(AllUp) AS Mau FROM (SSTREAM @mig_path);

#DECLARE mcas_path string   = string.Format("/shares/IDEAs.Prod/Partner/PreRelease/dev/tenantactiveusagecounts/user/rl28/mcasv2/{0:yyyy}/{0:MM}/ActiveUserCount_{0:yyyy}_{0:MM}_{0:dd}.ss", @snapDate);
mcas_data = SELECT Date, OmsTenantId, "MCAS" AS Application, Convert.ToInt64(AllUp) AS Mau FROM (SSTREAM @mcas_path);

#DECLARE intune_path string   = string.Format("/shares/IDEAs.Prod/Partner/PreRelease/dev/tenantactiveusagecounts/user/rl28/intune/{0:yyyy}/{0:MM}/ActiveUserCount_{0:yyyy}_{0:MM}_{0:dd}.ss", @snapDate);
intune_data = SELECT Date, OmsTenantId, "Intune" AS Application, Convert.ToInt64(AllUp) AS Mau FROM (SSTREAM @intune_path);

#DECLARE aadp_path string   = string.Format("/shares/IDEAs.Prod/Partner/PreRelease/dev/tenantactiveusagecounts/user/rl28/aadp/{0:yyyy}/{0:MM}/ActiveUserCount_{0:yyyy}_{0:MM}_{0:dd}.ss", @snapDate);
aadp_data = SELECT Date, OmsTenantId, "AADP" AS Application, Convert.ToInt64(AllUp) AS Mau FROM (SSTREAM @aadp_path);

//combine all workloads - TenantId, TPID, Date, Workload, MAU
data = SELECT * FROM oatp_data UNION ALL 
        SELECT * FROM mip_data UNION ALL 
        SELECT * FROM mig_data UNION ALL 
        SELECT * FROM mcas_data UNION ALL 
         SELECT * FROM intune_data UNION ALL 
         SELECT * FROM aadp_data;
                         

MappingView = VIEW @"/shares/IDEAs.Prod/Public/Views/IDEAsTenantTPIDMapping/v1/IDEAsTenantTPIDMapping.view"
    PARAMS( HistoryDate = DateTime.Parse( "2020-06-01" ) );

data =
    SELECT MappingView.OMSTenantId AS OmsTenantId,
           MappingView.FinalTPID, 
           data.Date, data.Application, data.Mau
    FROM MappingView
         INNER JOIN
             data
         ON data.OmsTenantId == MappingView.OMSTenantId;

data = SELECT Date, FinalTPID, Application, SUM(Mau) AS Mau FROM data GROUP BY Date, FinalTPID, Application;

OUTPUT data TO SSTREAM @allUpMauWkloadOut
    CLUSTERED BY FinalTPID, Application
    SORTED BY FinalTPID, Application
        WITH STREAMEXPIRY @"365";





